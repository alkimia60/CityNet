package com.openfactorybeans.citynet.desktop.forms;

import com.openfactorybeans.citynet.desktop.users.ListAllUsers;
import com.openfactorybeans.citynet.desktop.users.TMUser;
import com.openfactorybeans.citynet.desktop.users.User;
import com.openfactorybeans.citynet.desktop.utils.FormsUtils;
import com.openfactorybeans.citynet.desktop.utils.JsonUtils;
import java.util.ArrayList;
import java.util.List;
import javax.swing.JOptionPane;

/**
 * Formulari que llista els usuaris i dona més opcios per fer accions
 * 
 * @author Jose
 */
public class UsersList extends javax.swing.JInternalFrame {

    //URL
    public static final String PUBLIC_URL = "http://ec2-35-180-7-53.eu-west-3.compute.amazonaws.com:8080/citynet/UserManager";
    
    //Variables finals de errors del servidor
    private final String NO_TOKEN = "No valid token";
    
    //Variables finals del combobox del filtre
    private final String ALL = "Tots";
    private final String USER = "User";
    private final String EDITOR = "Editor";
    private final String ADMIN = "Admin";
    
    //Variables finals dels noms de les columnes de la taula
    private final int EMAIL = 0;
    private final int NAME = 1;
    private final int SURNAME = 2;
    private final int ADDRESS = 3;
    private final int POSTALCODE = 4;
    private final int CITY = 5;
    private final int ROL = 6;
    
    //Declaració de variables pel llistat
    private ListAllUsers lau;
    private List<User> users;
    private TMUser modelTable;
    private String serverResponse;
    private String listUsersJSon;
    
    //Variable que informa de la pàgina solicitada al servidor
    private int screen = 0;
    
    //Variable de finalització del llistat
    private boolean endList;
    
    /**
     * Creates new form UsersList
     */
    public UsersList() {
        initComponents();

        ////////////////////////////////////////////////////////////////////////////
        //Conectem amb el servidor per obtenir els usuaris.
        ////////////////////////////////////////////////////////////////////////////
        lau = new ListAllUsers();
        serverResponse = lau.listAllUsers(PUBLIC_URL, screen, Login.token);
        
        //Mirem si el servidor ha retornat un error
        String serverMissage = JsonUtils.findJsonValue(serverResponse, "error");
        
        if (serverMissage.equals(NO_TOKEN)) {
            
            //No estem identificats
            JOptionPane.showMessageDialog(null, "No s'ha iniciat cap sessió o la sessió ha finalitzat", "CityNet - Login", JOptionPane.ERROR_MESSAGE);
            
        } else {
        
            //Si són susaris
            listUsersJSon = serverResponse;

            //Passem el Json a ArrayList 
            users = new ArrayList<>();
            users = JsonUtils.parseJsonUser(listUsersJSon);

            //Comprovem les dades control
            endList = JsonUtils.parseJsonControl(listUsersJSon);

            //Cridem al mètode per canviar l'estat dels botons
            buttonsStates();

            //Omplim la taula amb l'Array
            fillTable();
            
        }

    }
    
    /**
     * Omple la taula per mostrar els usuaris a partir d'un Array
     */
    public void fillTable() {
        
        modelTable = new TMUser(users);
        jTableUsers.setModel(modelTable);
        
    }
    
    /**
     * Mètode per canviar l'estat dels botons d'avançar i enrederir
     * segons les dades rebudes pel servidor
     */
    public void buttonsStates() {
        
        //Habilitem o deshabiitem el botó per enrederir
        if (screen == 0) {
            
            btnRePag.setEnabled(false);
            
        } else {
            
            btnRePag.setEnabled(true);
            
        }
        
        //Habilitem o deshabiitem el botó per avanç
        if (endList) {
            
            btnAvPag.setEnabled(false);
            
        } else {
            
            btnAvPag.setEnabled(true);
            
        }
        
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        jTableUsers = new javax.swing.JTable();
        jPanelOptions = new javax.swing.JPanel();
        jSeparator1 = new javax.swing.JSeparator();
        jPanelAvRe = new javax.swing.JPanel();
        btnRePag = new javax.swing.JButton();
        btnAvPag = new javax.swing.JButton();
        jPanelActions = new javax.swing.JPanel();
        btnModify = new javax.swing.JButton();
        btnDelete = new javax.swing.JButton();
        btnChangeUserLevel = new javax.swing.JButton();
        jSeparator2 = new javax.swing.JSeparator();
        jPanelDetail = new javax.swing.JPanel();

        setClosable(true);
        setTitle("Llistat d'usuaris");
        addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                formFocusGained(evt);
            }
        });

        jTableUsers.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null}
            },
            new String [] {
                "Email", "Nom", "Cognoms", "Adreça", "Codi Postal", "Població", "Rol"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jTableUsers.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                jTableUsersFocusGained(evt);
            }
        });
        jScrollPane1.setViewportView(jTableUsers);

        jSeparator1.setOrientation(javax.swing.SwingConstants.VERTICAL);

        btnRePag.setFont(new java.awt.Font("Dialog", 1, 14)); // NOI18N
        btnRePag.setText("<<");
        btnRePag.setMaximumSize(new java.awt.Dimension(90, 35));
        btnRePag.setMinimumSize(new java.awt.Dimension(90, 35));
        btnRePag.setPreferredSize(new java.awt.Dimension(90, 35));
        btnRePag.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnRePagActionPerformed(evt);
            }
        });

        btnAvPag.setFont(new java.awt.Font("Dialog", 1, 14)); // NOI18N
        btnAvPag.setText(">>");
        btnAvPag.setMaximumSize(new java.awt.Dimension(90, 35));
        btnAvPag.setMinimumSize(new java.awt.Dimension(90, 35));
        btnAvPag.setPreferredSize(new java.awt.Dimension(90, 35));
        btnAvPag.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAvPagActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanelAvReLayout = new javax.swing.GroupLayout(jPanelAvRe);
        jPanelAvRe.setLayout(jPanelAvReLayout);
        jPanelAvReLayout.setHorizontalGroup(
            jPanelAvReLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanelAvReLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(btnRePag, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(btnAvPag, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanelAvReLayout.setVerticalGroup(
            jPanelAvReLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanelAvReLayout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(jPanelAvReLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnRePag, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnAvPag, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap())
        );

        btnModify.setFont(new java.awt.Font("Dialog", 1, 14)); // NOI18N
        btnModify.setText("Modificar");

        btnDelete.setFont(new java.awt.Font("Dialog", 1, 14)); // NOI18N
        btnDelete.setText("Eliminar");
        btnDelete.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnDeleteActionPerformed(evt);
            }
        });

        btnChangeUserLevel.setFont(new java.awt.Font("Dialog", 1, 14)); // NOI18N
        btnChangeUserLevel.setText("Canviar Rol");
        btnChangeUserLevel.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnChangeUserLevelActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanelActionsLayout = new javax.swing.GroupLayout(jPanelActions);
        jPanelActions.setLayout(jPanelActionsLayout);
        jPanelActionsLayout.setHorizontalGroup(
            jPanelActionsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanelActionsLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(btnModify)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(btnDelete)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(btnChangeUserLevel)
                .addContainerGap())
        );
        jPanelActionsLayout.setVerticalGroup(
            jPanelActionsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanelActionsLayout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(jPanelActionsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnModify)
                    .addComponent(btnDelete)
                    .addComponent(btnChangeUserLevel))
                .addContainerGap())
        );

        javax.swing.GroupLayout jPanelOptionsLayout = new javax.swing.GroupLayout(jPanelOptions);
        jPanelOptions.setLayout(jPanelOptionsLayout);
        jPanelOptionsLayout.setHorizontalGroup(
            jPanelOptionsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanelOptionsLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanelAvRe, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jSeparator1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanelActions, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(188, Short.MAX_VALUE))
        );
        jPanelOptionsLayout.setVerticalGroup(
            jPanelOptionsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanelOptionsLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanelOptionsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jSeparator1)
                    .addComponent(jPanelActions, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(jPanelOptionsLayout.createSequentialGroup()
                        .addComponent(jPanelAvRe, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addContainerGap())
        );

        javax.swing.GroupLayout jPanelDetailLayout = new javax.swing.GroupLayout(jPanelDetail);
        jPanelDetail.setLayout(jPanelDetailLayout);
        jPanelDetailLayout.setHorizontalGroup(
            jPanelDetailLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 0, Short.MAX_VALUE)
        );
        jPanelDetailLayout.setVerticalGroup(
            jPanelDetailLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 268, Short.MAX_VALUE)
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane1, javax.swing.GroupLayout.Alignment.TRAILING)
            .addComponent(jPanelOptions, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(jSeparator2)
            .addComponent(jPanelDetail, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 190, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanelOptions, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jSeparator2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanelDetail, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnAvPagActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAvPagActionPerformed
        
        //Aumentem el número de pàgina per solicitar al servidor
        screen++;
        
        ////////////////////////////////////////////////////////////////////////////
        //Conectem amb el servidor per obtenir la pàgina següent dels usuaris.
        ////////////////////////////////////////////////////////////////////////////
        lau = new ListAllUsers();
        serverResponse = lau.listAllUsers(PUBLIC_URL, screen, Login.token);
        
        //Mirem si el servidor ha retornat un error
        String serverMissage = JsonUtils.findJsonValue(serverResponse, "error");
        
        if (serverMissage.equals(NO_TOKEN)) {
            
            //No estem identificats
            JOptionPane.showMessageDialog(null, "No s'ha iniciat cap sessió o la sessió ha finalitzat", "CityNet - Login", JOptionPane.ERROR_MESSAGE);
            
        } else {
        
            //Si són susaris
            listUsersJSon = serverResponse;

            //Passem el Json a ArrayList 
            users = new ArrayList<>();
            users = JsonUtils.parseJsonUser(listUsersJSon);

            //Comprovem les dades control
            endList = JsonUtils.parseJsonControl(listUsersJSon);

            //Cridem al mètode per canviar l'estat dels botons
            buttonsStates();

            //Omplim la taula amb l'Array
            fillTable();
            
        }
        
    }//GEN-LAST:event_btnAvPagActionPerformed

    private void btnRePagActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnRePagActionPerformed
        
        //Aumentem el número de pàgina per solicitar al servidor
        screen--;
        
        ////////////////////////////////////////////////////////////////////////////
        //Conectem amb el servidor per obtenir la pàgina anterior dels usuaris.
        ////////////////////////////////////////////////////////////////////////////
        lau = new ListAllUsers();
        serverResponse = lau.listAllUsers(PUBLIC_URL, screen, Login.token);
        
        //Mirem si el servidor ha retornat un error
        String serverMissage = JsonUtils.findJsonValue(serverResponse, "error");
        
        if (serverMissage.equals(NO_TOKEN)) {
            
            //No estem identificats
            JOptionPane.showMessageDialog(null, "No s'ha iniciat cap sessió o la sessió ha finalitzat", "CityNet - Login", JOptionPane.ERROR_MESSAGE);
            
        } else {
        
            //Si són usaris
            listUsersJSon = serverResponse;

            //Passem el Json a ArrayList 
            users = new ArrayList<>();
            users = JsonUtils.parseJsonUser(listUsersJSon);

            //Comprovem les dades control
            endList = JsonUtils.parseJsonControl(listUsersJSon);

            //Cridem al mètode per canviar l'estat dels botons
            buttonsStates();

            //Omplim la taula amb l'Array
            fillTable();
            
        }
    }//GEN-LAST:event_btnRePagActionPerformed

    private void btnDeleteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnDeleteActionPerformed

        //Obtenir la fila del email
        int selectedRow = jTableUsers.getSelectedRow();
        
        if (selectedRow != -1) {
            
            //Obtenim el valor dels camps de la fila
            String email = modelTable.getValueAt(selectedRow, EMAIL).toString();
            String name = modelTable.getValueAt(selectedRow, NAME).toString();
            String surname = modelTable.getValueAt(selectedRow, SURNAME).toString();
            String address = modelTable.getValueAt(selectedRow, ADDRESS).toString();
            String postalCode = modelTable.getValueAt(selectedRow, POSTALCODE).toString();
            String city = modelTable.getValueAt(selectedRow, CITY).toString();
            
            //Netejem qualsevol finestra oberta anteriorment en l'escrptori
            jPanelDetail.removeAll();
            jPanelDetail.repaint();

            //Instanciem el InternalFrame
            UserDelete userDelete = new UserDelete(email, name, surname, address, postalCode, city);
            
            //Afegim el formulari al panel d'eliminar
            jPanelDetail.add(userDelete);

            //Centrem la finestra
            FormsUtils.centerJInternalFrame(jPanelDetail, userDelete);

            //El fem visible
            userDelete.setVisible(true);
        
        } else {
            
            //No hi ha cap fila seleccionada
            JOptionPane.showMessageDialog(null, "Has de seleccionar un usuari", "CityNet - Eliminar usuari", JOptionPane.ERROR_MESSAGE);
            
        }
    }//GEN-LAST:event_btnDeleteActionPerformed

    private void formFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_formFocusGained
    }//GEN-LAST:event_formFocusGained

    private void btnChangeUserLevelActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnChangeUserLevelActionPerformed
        
        //Obtenir la fila del email
        int selectedRow = jTableUsers.getSelectedRow();
        
        if (selectedRow != -1) {
            
            //Obtenim l'usuari, el nom i el rol
            String email = modelTable.getValueAt(selectedRow, EMAIL).toString();
            String name = modelTable.getValueAt(selectedRow, NAME).toString();
            String surname = modelTable.getValueAt(selectedRow, SURNAME).toString();
            String rol = modelTable.getValueAt(selectedRow, ROL).toString();
            
            //Passarem el nom complert
            String nameSurname = name + " " + surname;
            
            //Netejem qualsevol finestra oberta anteriorment en l'escriptori
            jPanelDetail.removeAll();
            jPanelDetail.repaint();

            //Instanciem el InternalFrame
            UserUpdateRol userUpdateRol = new UserUpdateRol(email, nameSurname, rol);
            
            //Afegim el formulari al panel d'eliminar
            jPanelDetail.add(userUpdateRol);

            //Centrem la finestra
            FormsUtils.centerJInternalFrame(jPanelDetail, userUpdateRol);
            
            //El fem visible
            userUpdateRol.setVisible(true);
        
        } else {
            
            //No hi ha cap fila seleccionada
            JOptionPane.showMessageDialog(null, "Has de seleccionar un usuari", "CityNet - Canviar rol", JOptionPane.ERROR_MESSAGE);
            
        }
        
    }//GEN-LAST:event_btnChangeUserLevelActionPerformed

    private void jTableUsersFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_jTableUsersFocusGained

        ////////////////////////////////////////////////////////////////////////////
        //Conectem amb el servidor per obtenir la pàgina anterior dels usuaris.
        ////////////////////////////////////////////////////////////////////////////
        lau = new ListAllUsers();
        serverResponse = lau.listAllUsers(PUBLIC_URL, screen, Login.token);
        
        //Mirem si el servidor ha retornat un error
        String serverMissage = JsonUtils.findJsonValue(serverResponse, "error");
        
        if (serverMissage.equals(NO_TOKEN)) {
            
            //No estem identificats
            JOptionPane.showMessageDialog(null, "No s'ha iniciat cap sessió o la sessió ha finalitzat", "CityNet - Login", JOptionPane.ERROR_MESSAGE);
            
        } else {
        
            //Si són usaris
            listUsersJSon = serverResponse;

            //Passem el Json a ArrayList 
            users = new ArrayList<>();
            users = JsonUtils.parseJsonUser(listUsersJSon);

            //Comprovem les dades control
            endList = JsonUtils.parseJsonControl(listUsersJSon);

            //Cridem al mètode per canviar l'estat dels botons
            buttonsStates();

            //Omplim la taula amb l'Array
            fillTable();
            
        }
        
    }//GEN-LAST:event_jTableUsersFocusGained


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnAvPag;
    private javax.swing.JButton btnChangeUserLevel;
    private javax.swing.JButton btnDelete;
    private javax.swing.JButton btnModify;
    private javax.swing.JButton btnRePag;
    private javax.swing.JPanel jPanelActions;
    private javax.swing.JPanel jPanelAvRe;
    private javax.swing.JPanel jPanelDetail;
    private javax.swing.JPanel jPanelOptions;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JSeparator jSeparator1;
    private javax.swing.JSeparator jSeparator2;
    private javax.swing.JTable jTableUsers;
    // End of variables declaration//GEN-END:variables
}
